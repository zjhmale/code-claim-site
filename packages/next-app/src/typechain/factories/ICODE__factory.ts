/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { ICODE, ICODEInterface } from "../ICODE";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_delegator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_delegatee",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class ICODE__factory {
  static readonly abi = _abi;
  static createInterface(): ICODEInterface {
    return new utils.Interface(_abi) as ICODEInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ICODE {
    return new Contract(address, _abi, signerOrProvider) as ICODE;
  }
}
