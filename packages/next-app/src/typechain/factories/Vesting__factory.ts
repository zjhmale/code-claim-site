/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Vesting, VestingInterface } from "../Vesting";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_codeToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_startTimestamp",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_payees",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_shares",
        type: "uint256[]",
      },
    ],
    name: "addPayees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "codeToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "duration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "period",
        type: "uint256",
      },
    ],
    name: "epoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "payees",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "releasePeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "released",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "shares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "start",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sweep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalEpochs",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalReleased",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "vestedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101406040526303c2670060c05262278d0060e05260186101005269921cf9965f520b4000006101205234801561003557600080fd5b50604051611365380380611365833981016040819052610054916100c3565b61005d33610073565b6001600160a01b0390911660805260a0526100fd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080604083850312156100d657600080fd5b82516001600160a01b03811681146100ed57600080fd5b6020939093015192949293505050565b60805160a05160c05160e05161010051610120516111c56101a0600039600081816101970152610822015260008181610236015261068e01526000818161020f0152818161089c01526108c50152600081816101400152818161038901526105b20152600081816102c5015281816103aa015281816105d3015261063e01526000818161027e015281816104210152818161048e0152610aec01526111c56000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c8063715018a6116100b25780639852595c11610081578063ce7c2ac211610066578063ce7c2ac2146102e7578063e33b7de314610307578063f2fde38b1461031057600080fd5b80639852595c146102a0578063be9a6555146102c057600080fd5b8063715018a61461025857806386d1a69f146102605780638da5cb5b14610268578063904d20221461027957600080fd5b8063538445521161010957806363037b0c116100ee57806363037b0c146101df57806363ef16271461020a5780636c5ec94d1461023157600080fd5b806353844552146101b95780635487c577146101cc57600080fd5b80630fb5a6b41461013b57806335faa41614610175578063384711cc1461017f5780633a98ef3914610192575b600080fd5b6101627f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b61017d610323565b005b61016261018d366004610e99565b6105aa565b6101627f000000000000000000000000000000000000000000000000000000000000000081565b61017d6101c7366004610fa8565b6106d5565b6101626101da366004611068565b610894565b6101f26101ed366004611068565b6108f8565b6040516001600160a01b03909116815260200161016c565b6101627f000000000000000000000000000000000000000000000000000000000000000081565b6101627f000000000000000000000000000000000000000000000000000000000000000081565b61017d610922565b61017d610988565b6000546001600160a01b03166101f2565b6101f27f000000000000000000000000000000000000000000000000000000000000000081565b6101626102ae366004610e99565b60036020526000908152604090205481565b6101627f000000000000000000000000000000000000000000000000000000000000000081565b6101626102f5366004610e99565b60026020526000908152604090205481565b61016260015481565b61017d61031e366004610e99565b610b68565b6000546001600160a01b031633146103825760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b60006103ce7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611097565b905080421161041f5760405162461bcd60e51b815260206004820181905260248201527f56657374696e673a2052656c6561736520706572696f64206e6f7420656e64736044820152606401610379565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb6104606000546001600160a01b031690565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b1580156104d857600080fd5b505afa1580156104ec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051091906110af565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561056e57600080fd5b505af1158015610582573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a691906110c8565b5050565b6000426105f77f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611097565b811115610634576001600160a01b03831660009081526003602090815260408083205460029092529091205461062d91906110ea565b9392505050565b60006106636101da7f0000000000000000000000000000000000000000000000000000000000000000846110ea565b6001600160a01b038516600090815260036020908152604080832054600290925290912054919250907f0000000000000000000000000000000000000000000000000000000000000000906106b9908490611101565b6106c39190611136565b6106cd91906110ea565b949350505050565b805182511461074c5760405162461bcd60e51b815260206004820152602a60248201527f56657374696e673a2070617965657320616e6420736861726573206c656e677460448201527f68206d69736d61746368000000000000000000000000000000000000000000006064820152608401610379565b600082511161079d5760405162461bcd60e51b815260206004820152601260248201527f56657374696e673a206e6f2070617965657300000000000000000000000000006044820152606401610379565b6000805b835181101561081f576107e68482815181106107bf576107bf61114a565b60200260200101518483815181106107d9576107d961114a565b6020026020010151610c4a565b8281815181106107f8576107f861114a565b60200260200101518261080b9190611097565b91508061081781611160565b9150506107a1565b507f0000000000000000000000000000000000000000000000000000000000000000811461088f5760405162461bcd60e51b815260206004820152601460248201527f546f74616c536861726573206d69736d617463680000000000000000000000006044820152606401610379565b505050565b6000806108c17f00000000000000000000000000000000000000000000000000000000000000008461117b565b90507f00000000000000000000000000000000000000000000000000000000000000006108ee82856110ea565b61062d9190611136565b6004818154811061090857600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b0316331461097c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610379565b6109866000610e15565b565b336000818152600260205260409020546109e45760405162461bcd60e51b815260206004820152601e60248201527f56657374696e673a206163636f756e7420686173206e6f2073686172657300006044820152606401610379565b60006109ef826105aa565b905060008111610a675760405162461bcd60e51b815260206004820152602360248201527f56657374696e673a206163636f756e74206973206e6f7420647565207061796d60448201527f656e7400000000000000000000000000000000000000000000000000000000006064820152608401610379565b6001600160a01b03821660009081526003602052604081208054839290610a8f908490611097565b925050819055508060016000828254610aa89190611097565b90915550506040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b038381166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb90604401602060405180830381600087803b158015610b3057600080fd5b505af1158015610b44573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088f91906110c8565b6000546001600160a01b03163314610bc25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610379565b6001600160a01b038116610c3e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610379565b610c4781610e15565b50565b6001600160a01b038216610cc55760405162461bcd60e51b8152602060048201526024808201527f56657374696e673a206163636f756e7420697320746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610379565b60008111610d155760405162461bcd60e51b815260206004820152601560248201527f56657374696e673a2073686172657320617265203000000000000000000000006044820152606401610379565b6001600160a01b03821660009081526002602052604090205415610da15760405162461bcd60e51b815260206004820152602360248201527f56657374696e673a206163636f756e7420616c7265616479206861732073686160448201527f72657300000000000000000000000000000000000000000000000000000000006064820152608401610379565b60048054600181019091557f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b039093167fffffffffffffffffffffffff00000000000000000000000000000000000000009093168317905560009182526002602052604090912055565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b0381168114610e9457600080fd5b919050565b600060208284031215610eab57600080fd5b61062d82610e7d565b634e487b7160e01b600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610f1157610f11610eb4565b604052919050565b600067ffffffffffffffff821115610f3357610f33610eb4565b5060051b60200190565b600082601f830112610f4e57600080fd5b81356020610f63610f5e83610f19565b610eca565b82815260059290921b84018101918181019086841115610f8257600080fd5b8286015b84811015610f9d5780358352918301918301610f86565b509695505050505050565b60008060408385031215610fbb57600080fd5b823567ffffffffffffffff80821115610fd357600080fd5b818501915085601f830112610fe757600080fd5b81356020610ff7610f5e83610f19565b82815260059290921b8401810191818101908984111561101657600080fd5b948201945b8386101561103b5761102c86610e7d565b8252948201949082019061101b565b9650508601359250508082111561105157600080fd5b5061105e85828601610f3d565b9150509250929050565b60006020828403121561107a57600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156110aa576110aa611081565b500190565b6000602082840312156110c157600080fd5b5051919050565b6000602082840312156110da57600080fd5b8151801515811461062d57600080fd5b6000828210156110fc576110fc611081565b500390565b600081600019048311821515161561111b5761111b611081565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261114557611145611120565b500490565b634e487b7160e01b600052603260045260246000fd5b600060001982141561117457611174611081565b5060010190565b60008261118a5761118a611120565b50069056fea2646970667358221220d473e4334400a0b3884f07f304bf9ec92d5472e343528f338e902ff985016d0364736f6c63430008090033";

export class Vesting__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _codeToken: string,
    _startTimestamp: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<Vesting> {
    return super.deploy(
      _codeToken,
      _startTimestamp,
      overrides || {},
    ) as Promise<Vesting>;
  }
  getDeployTransaction(
    _codeToken: string,
    _startTimestamp: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(
      _codeToken,
      _startTimestamp,
      overrides || {},
    );
  }
  attach(address: string): Vesting {
    return super.attach(address) as Vesting;
  }
  connect(signer: Signer): Vesting__factory {
    return super.connect(signer) as Vesting__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VestingInterface {
    return new utils.Interface(_abi) as VestingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): Vesting {
    return new Contract(address, _abi, signerOrProvider) as Vesting;
  }
}
